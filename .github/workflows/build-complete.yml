name: Build Mull 133.0.3 ARM64

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
    - name: Maximize build space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        df -h

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3 python3-pip python3-venv \
          git mercurial subversion \
          openjdk-17-jdk-headless openjdk-8-jdk-headless \
          build-essential \
          rsync unzip wget \
          android-sdk-build-tools-common \
          apksigner zipalign

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: |
          8
          17

    - name: Setup Android SDK and NDK
      run: |
        # Create directories
        mkdir -p ~/android ~/android-ndk
        
        # Download and setup Android SDK tools
        cd ~/android
        wget -q https://dl.google.com/android/repository/tools_r25.2.3-linux.zip
        unzip -q tools_r25.2.3-linux.zip
        
        # Set environment and install SDK components
        export ANDROID_HOME=~/android
        export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
        
        echo y | $ANDROID_HOME/tools/android update sdk --no-ui --filter platform-tools
        echo y | $ANDROID_HOME/tools/android update sdk --no-ui --filter build-tools-30.0.2,android-30,build-tools-29.0.3,android-29,build-tools-28.0.3,android-28 --all
        
        # Download and setup NDK r27c
        cd ~/android-ndk
        wget -q https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
        unzip -q android-ndk-r27c-linux.zip
        
        # Set global environment variables
        echo "ANDROID_HOME=$HOME/android" >> $GITHUB_ENV
        echo "ANDROID_NDK=$HOME/android-ndk/android-ndk-r27c" >> $GITHUB_ENV
        echo "$HOME/android/tools" >> $GITHUB_PATH
        echo "$HOME/android/platform-tools" >> $GITHUB_PATH

    - name: Install fdroidserver
      run: |
        # Clone fdroidserver and fdroiddata
        git clone https://gitlab.com/fdroid/fdroidserver.git
        git clone https://gitlab.com/fdroid/fdroiddata.git
        
        # Setup virtual environment
        python3 -m venv fdroid-env
        source fdroid-env/bin/activate
        
        # Install fdroidserver
        cd fdroidserver
        pip install -e .
        cd ..
        
        # Setup gradle wrapper
        mkdir -p ~/bin
        wget https://gitlab.com/fdroid/fdroidserver/-/raw/master/gradlew-fdroid -O ~/bin/gradle
        chmod +x ~/bin/gradle
        echo "$HOME/bin" >> $GITHUB_PATH
        
        # Disable Gradle daemon to prevent OOM
        mkdir -p ~/.gradle
        echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties

    - name: Setup fdroid configuration
      run: |
        source fdroid-env/bin/activate
        cd fdroiddata
        
        # Create config.py
        cat > config.py << 'EOF'
#!/usr/bin/env python3

sdk_path = "$HOME/android"
ndk_paths = {"27.2.12479018": "$HOME/android-ndk/android-ndk-r27c"}
build_tools = "30.0.2"

keystore = "debug.keystore"
repo_keyalias = "sova"
keypass = "android"
keystorepass = "android"
keydname = "CN=Birdman, OU=Cell, O=Alcatraz, L=Alcatraz, S=California, C=US"
EOF
        
        # Expand $HOME variable in config
        sed -i "s|\$HOME|$HOME|g" config.py

    - name: Create Mull metadata
      run: |
        source fdroid-env/bin/activate
        cd fdroiddata
        
        # Create Mull metadata file
        mkdir -p metadata
        cat > metadata/us.spotco.fennec_dos.yml << 'EOF'
Categories:
  - Internet
License: MPL-2.0
WebSite: https://divestos.org/pages/browsers#mull
SourceCode: https://codeberg.org/divested-mobile/mull-fenix
IssueTracker: https://codeberg.org/divested-mobile/mull-fenix/issues

AutoName: Mull
Summary: Privacy oriented web browser
Description: A privacy oriented and deblobbed web browser based on Mozilla technology.

RepoType: git
Repo: https://codeberg.org/divested-mobile/mull-fenix.git

Builds:
  - versionName: '133.0.3'
    versionCode: 1330300202
    commit: v133.0.3
    subdir: android-components
    submodules: true
    gradle:
      - yes
    srclibs:
      - rustup@1.27.1
    prebuild: |
      pushd ..
      git submodule update --init --recursive
      popd
    build: |
      export RUST_ANDROID_GRADLE_TARGET_X86_64_LINUX_ANDROID_NDK_ROOT="$ANDROID_NDK"
      export RUST_ANDROID_GRADLE_TARGET_I686_LINUX_ANDROID_NDK_ROOT="$ANDROID_NDK"
      export RUST_ANDROID_GRADLE_TARGET_ARMV7_LINUX_ANDROIDEABI_NDK_ROOT="$ANDROID_NDK"
      export RUST_ANDROID_GRADLE_TARGET_AARCH64_LINUX_ANDROID_NDK_ROOT="$ANDROID_NDK"
      
      $rustup$/rustup-init.sh -y
      source ~/.cargo/env
      rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android
      
      pushd ..
      ./gradlew assembleFenixNightlyArm64 -x lintVitalFenixNightlyRelease
      popd

AutoUpdateMode: None
UpdateCheckMode: None
CurrentVersion: '133.0.3'
CurrentVersionCode: 1330300202
EOF

    - name: Build Mull APK
      run: |
        source fdroid-env/bin/activate
        cd fdroiddata
        
        echo "=== Building Mull 133.0.3 ARM64 ==="
        
        # Set Java 17 as default
        export JAVA_HOME="/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.12-7/x64"
        
        echo "Environment:"
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_NDK: $ANDROID_NDK"
        echo "JAVA_HOME: $JAVA_HOME"
        
        # Build the APK
        fdroid build -v -l us.spotco.fennec_dos:1330300202 2>&1 | tee build.log
        
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "=== Build failed! ==="
          tail -100 build.log
          find . -name "*.log" -exec tail -50 {} \;
          exit 1
        fi
        
        echo "=== Build completed ==="

    - name: Find and prepare APK
      id: find_apk
      run: |
        cd fdroiddata
        
        # Find the built APK
        APK_PATH=$(find . -name "*.apk" -type f | head -1)
        
        if [ -z "$APK_PATH" ]; then
          echo "No APK found! Checking directories:"
          find . -name "*.apk" -o -name "*.jar"
          find . -type d -name "*build*" -o -name "*output*" -o -name "*unsigned*"
          exit 1
        fi
        
        echo "Found APK: $APK_PATH"
        
        # Copy to workspace with simple name
        APK_NAME="mull-133.0.3-arm64.apk"
        cp "$APK_PATH" "../$APK_NAME"
        
        echo "apk_name=$APK_NAME" >> $GITHUB_OUTPUT

    - name: Sign APK (if secrets available)
      id: sign_apk
      run: |
        if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ] && [ -n "${{ secrets.KEYSTORE_PASSWORD }}" ] && [ -n "${{ secrets.KEY_PASSWORD }}" ] && [ -n "${{ secrets.KEY_ALIAS }}" ]; then
          echo "=== Signing APK ==="
          
          # Decode keystore
          mkdir -p keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore/keystore.jks
          
          APK_NAME="${{ steps.find_apk.outputs.apk_name }}"
          
          # Align and sign
          zipalign -v 4 "$APK_NAME" "${APK_NAME%.apk}-aligned.apk"
          
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore keystore/keystore.jks \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -keypass "${{ secrets.KEY_PASSWORD }}" \
            "${APK_NAME%.apk}-aligned.apk" "${{ secrets.KEY_ALIAS }}"
          
          mv "${APK_NAME%.apk}-aligned.apk" "${APK_NAME%.apk}-signed.apk"
          
          echo "signed=true" >> $GITHUB_OUTPUT
          echo "APK signed successfully"
        else
          echo "signed=false" >> $GITHUB_OUTPUT
          echo "Signing secrets not available, skipping signing"
        fi

    - name: Upload unsigned APK
      uses: actions/upload-artifact@v4
      with:
        name: mull-133.0.3-arm64-unsigned
        path: ${{ steps.find_apk.outputs.apk_name }}
        retention-days: 30

    - name: Upload signed APK
      if: steps.sign_apk.outputs.signed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: mull-133.0.3-arm64-signed
        path: "*-signed.apk"
        retention-days: 90

    - name: Build summary
      run: |
        echo "## 🎉 Mull 133.0.3 ARM64 Build Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: Mull 133.0.3 (final archived version)" >> $GITHUB_STEP_SUMMARY
        echo "- **Architecture**: ARM64" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Code**: 1330300202" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Method**: fdroidserver" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.sign_apk.outputs.signed }}" = "true" ]; then
          echo "- **Signing**: ✅ APK signed" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Signing**: ❌ Unsigned only" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Generated Files" >> $GITHUB_STEP_SUMMARY
        ls -la *.apk 2>/dev/null | while read line; do
          echo "- \`$line\`" >> $GITHUB_STEP_SUMMARY
        done || echo "- No APK files found" >> $GITHUB_STEP_SUMMARY
